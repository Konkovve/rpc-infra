worker_processes 1;

events {
    worker_connections 1024;
}

http {
    client_max_body_size 32;
    send_timeout 1;

    upstream core-service {
        server core-service:80;
    }

    upstream user-service {
        server user-service:80;
    }

    server {
        listen 80;

        location / {
            root /usr/share/nginx/html;
            index index.html;
        }

        location = /rpc {
            if ($request_method != POST) {
                return 405 '{"error":"Method Not Allowed"}';
            }

            if ($http_x_service_account != "service-account") {
                return 401 '{"error":"Unauthorized"}';
            }

            if ($http_x_service_credentials = "") {
                return 401 '{"error":"Unauthorized"}';
            }

            client_max_body_size 32;
            client_body_timeout 1;

            set $backend core-service;
            if ($http_x_rpc_method ~ "^user\..*") {
                set $backend user-service;
            }

            proxy_pass http://$backend;
            proxy_set_header X-Service-Account $http_x_service_account;
            proxy_set_header X-Service-Credentials $http_x_service_credentials;
            proxy_set_header X-Rpc-Method $http_x_rpc_method;

            proxy_connect_timeout 1;
            proxy_read_timeout 1;

            error_page 400 = @json_400;
            error_page 401 = @json_401;
            error_page 405 = @json_405;
        }

        location @json_400 {
            default_type application/json;
            return 400 '{"error":"Invalid RPC request format"}';
        }

        location @json_401 {
            default_type application/json;
            return 401 '{"error":"Unauthorized"}';
        }

        location @json_405 {
            default_type application/json;
            return 405 '{"error":"Method Not Allowed"}';
        }
    }
}